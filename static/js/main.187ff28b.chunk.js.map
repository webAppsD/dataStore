{"version":3,"sources":["component/Loading.js","component/Menu.js","component/Detail.js","component/Header.js","component/Footer.js","component/Home.js","component/Celebs.js","component/Stars.js","redux/ActionTypes.js","firebase/firebase.js","firebase/config.js","redux/ActionCreator.js","component/Main.js","redux/models.js","redux/images.js","redux/videos.js","redux/celebs.js","redux/stars.js","redux/auth.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","props","className","class","color","RenderModels","model","deleteModel","onClick","in","transformProms","exitTransform","style","backgroundColor","to","name","outline","_id","src","image","alt","toUpperCase","Menu","state","models","isModelOpen","toggleModel","bind","handleModelSubmit","this","setState","event","console","log","JSON","stringify","value","postModel","menu","map","isLoading","errMsg","active","isOpen","onSubmit","values","htmlFor","type","id","innerRef","input","modelModalOpen","toggle","toggleModelModal","Text","placeholder","Component","Detail","images","videos","video","category","path","isImageOpen","isVideoOpen","handleImageSubmit","handleVideoSubmit","handleImgDelete","handleVidDelete","toggleImage","toggleVideo","postImage","link","postVideo","imageModalOpen","videoModalOpen","deleteImage","deleteVideo","width","height","allowFullScreen","title","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","handleLogout","loginUser","username","password","preventDefault","logoutUser","dark","expand","href","navbar","auth","isAuthenticated","user","displayName","isFetching","Footer","Home","toggleLoginModal","RenderCelebs","celeb","deleteCeleb","Celebs","celebs","celedModalOpen","toggleCelebModal","handleCelebSubmit","postCeleb","RenderStars","star","deleteStar","Stars","stars","starModalOpen","toggleStarModal","handleStarSubmit","postStar","ADD_IMAGE","ADD_VIDEO","MODELS_LOADING","MODELS_FAILED","ADD_MODELS","ADD_MODEL","CELEBS_LOADING","CELEBS_FAILED","ADD_CELEBS","ADD_CELEB","STARS_LOADING","STARS_FAILED","ADD_STARS","ADD_STAR","ADD_IMAGES","IMAGES_FAILED","ADD_VIDEOS","VIDEOS_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","addImage","ActionTypes","payload","addVideo","fetchModels","dispatch","modelsLoading","collection","get","then","snapshot","forEach","doc","data","push","addModels","catch","error","modelsFailed","message","currentUser","add","docRef","exists","addModel","fetchCelebs","celebsLoading","addCelebs","celebsFailed","addCeleb","fetchImages","addImages","fetchVideos","addVideos","fetchStars","starsLoading","addStars","starsFailed","addStar","creds","signInWithEmailAndPassword","localStorage","setItem","recieveLogin","signOut","removeItem","Main","selected","classNames","timeout","location","exact","component","match","filter","params","key","withRouter","connect","delete","Models","action","concat","Images","Videos","Auth","token","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187ff28b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = (props) => {\n    return(\n        <div className=\"col-12\">\n            <span class=\"fas fa-circle-notch\" color=\"primary\"></span>\n            <p className=\"text\">Loading ...</p>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardFooter, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Collapse, Input } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm} from 'react-redux-form';\nimport {FadeTransform} from 'react-animation-components';\nimport {Loading} from './Loading';\n\nfunction RenderModels({model, onClick, deleteModel}) {\n    return(\n        <FadeTransform in \n            transformProms={{\n                exitTransform: 'scale(0.5) translateY(-50%)' \n            }}>\n            <Card style={{backgroundColor:\"#000\"}}>\n                <Link to={`/models/${model.name}`} >\n                    <CardImgOverlay><Button className=\"delete\" outline onClick={()=>deleteModel(model._id)}><span className=\"fa fa-trash\" /></Button></CardImgOverlay>\n                    <CardImg src={model.image} alt={model.name} />\n                    <CardFooter>{model.name.toUpperCase()}</CardFooter>\n                </Link> \n            </Card>\n        </FadeTransform>\n    );\n}\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            models: this.props.models,\n            isModelOpen: false\n        }\n        this.toggleModel = this.toggleModel.bind(this);\n        this.handleModelSubmit = this.handleModelSubmit.bind(this);\n    }\n\n    toggleModel() {\n        this.setState ({\n            isModelOpen: !this.state.isModelOpen\n        });\n    }\n\n    handleModelSubmit(event) {\n        //this.toggleModelModal();\n        console.log(JSON.stringify(this.image.value));\n        this.props.postModel(this.name.value,this.image.value);\n    }\n\n    render() {\n        const menu = this.state.models.map((model) => {\n            return(\n                <div className=\"col-12 col-sm-3 m-1\">\n                    <RenderModels model={model} deleteModel={this.props.deleteModel} />\n                </div>\n            );\n        });\n        if(this.props.models.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            )\n        }\n        else if(this.props.models.errMsg) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{this.props.models.errMsg}</h4>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem active>Models</BreadcrumbItem>\n                        </Breadcrumb>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-sm-4\">\n                            <h3>Models</h3>\n                        </div>\n                        <div className=\"col-12 col-sm offset-sm-4\">\n                            <Button onClick={this.toggleModel}>Add Models</Button>\n                            <Collapse isOpen={this.state.isModelOpen}>\n                                <LocalForm onSubmit={(values) => this.handleModelSubmit(values)}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"name\"><h3>Name:</h3></Label>\n                                        <Input type=\"text\" id=\"name\" name=\"name\" innerRef={(input) => this.name = input} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"image\"><h3>Image:</h3></Label>\n                                        <Input type=\"text\" id=\"image\" name=\"image\" innerRef={(input) => this.image = input} />\n                                    </FormGroup>\n                                </LocalForm>\n                            </Collapse>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                    <Modal isOpen={this.state.modelModalOpen} toggle={this.modelModalOpen}>\n                        <ModalHeader toggle={this.toggleModelModal}>Add Model</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleModelSubmit(values)}>\n                                <FormGroup>\n                                    <Label htmlFor=\"name\">Name</Label>\n                                    <Control.Text model=\".name\" id=\"modelName\" name=\"modelName\" placeholder=\"Name\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"image\">Image</Label>\n                                    <Control.Text model=\".image\" id=\"modelImg\" name=\"modelImg\" placeholder=\"Image\" />\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"info\">Submit</Button>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Collapse, Input} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {LocalForm} from 'react-redux-form';\nimport {Stagger} from 'react-animation-components';\n\nimport {Loading} from './Loading';\n\n\nclass Detail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            images: this.props.image,\n            videos: this.props.video,\n            category: this.props.path,\n            path: \"/\"+this.props.path,\n            name: this.props.name,\n            isImageOpen: false,\n            isVideoOpen: false\n        }\n        this.handleImageSubmit = this.handleImageSubmit.bind(this);\n        this.handleVideoSubmit = this.handleVideoSubmit.bind(this);\n        this.handleImgDelete = this.handleImgDelete.bind(this);\n        this.handleVidDelete = this.handleVidDelete.bind(this);\n        this.toggleImage = this.toggleImage.bind(this);\n        this.toggleVideo = this.toggleVideo.bind(this);\n    }\n\n    toggleImage() {\n        this.setState({\n            isImageOpen: !this.state.isImageOpen\n        });\n    }\n\n    toggleVideo() {\n        this.setState({\n            isVideoOpen: !this.state.isVideoOpen\n        });\n    }\n\n    handleImageSubmit(event) {\n        //this.toggleImageModal();\n        console.log(JSON.stringify(this.state.name, this.image.value, this.state.category));\n        this.props.postImage(this.state.name, this.state.category, this.image.value);\n    }\n\n    handleVideoSubmit(event) {\n        //this.toggleVideoModal();\n        console.log(JSON.stringify(this.state.name, this.link.value, this.state.category));\n        this.props.postVideo(this.state.name, this.state.category, this.link.value);\n    }\n\n    toggleImageModal() {\n        this.setState({\n            imageModalOpen: !this.state.imageModalOpen\n        })\n    }\n\n    toggleVideoModal() {\n        this.setState({\n            videoModalOpen: !this.state.videoModalOpen\n        })\n    }\n\n    handleImgDelete(image) {\n        console.log(image._id);\n        this.props.deleteImage(image._id);\n    }\n\n    handleVidDelete(video) {\n        console.log(video._id);\n        this.props.deleteVideo(video._id);\n    }\n\n    render() {\n        if(this.state.images == null) {\n            return(<div></div>);\n        }\n\n        const images = this.state.images.map((image) => {\n            return(\n            <div className=\"gallery\">\n                <img className=\"img-fluid\" src={image.image} alt={image.name} />\n            </div>\n            );\n        })\n\n        const videos = this.state.videos.map((video) => {\n            return(\n                <div className=\"\">\n                    <iframe src={video.link} width=\"960\" height=\"640\" allowFullScreen title={video.name} /><br />\n                    <div className=\"align-center\">\n                        <Button onClick={()=>this.handleVidDelete(video)}><span><i className=\"fa fa-trash-o\" color=\"primary\" /></span></Button>\n                    </div>\n                </div>\n            );\n        })\n\n        if(this.props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <Loading />\n                </div>\n            )\n        }\n        else if(this.props.errMsg) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{this.props.models.errMsg}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return(\n                <div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to={this.state.path}>{this.props.path}</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{this.state.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                        </div>\n                        <div className=\"App\">\n                            <h2>{this.state.name.toUpperCase()}</h2>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-sm-2\">\n                                <h3>Images</h3>\n                            </div>\n                            <div className=\"col-12 col-sm offset-sm-2\">\n                                <Button onClick={this.toggleImage}>Add Images</Button>\n                                <Collapse isOpen={this.state.isImageOpen}>\n                                    <LocalForm onSubmit={(values) => this.handleImageSubmit(values)}>\n                                        <div className=\"row\">\n                                            <Label htmlFor=\"image\"><h3>Add Image:</h3></Label>\n                                            <Input type=\"text\" id=\"image\" name=\"image\" innerRef={(input) => this.image = input} />\n                                            <div className=\"col\">\n                                                <Button type=\"submit\" value=\"submit\">Submit</Button>\n                                            </div>\n                                        </div>\n                                    </LocalForm>\n                                </Collapse>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <Stagger in>\n                                {images}\n                            </Stagger>\n                        </div>\n                        <br />\n                        <div className=\"row\">\n                            <div className=\"col-12 col-sm-2\">\n                                <h3>Videos</h3>\n                            </div>\n                            <div className=\"col-12 col-sm offset-sm-3\">\n                                <Button onClick={this.toggleVideo}>Add Videos</Button>\n                                <Collapse isOpen={this.state.isVideoOpen}>\n                                    <LocalForm onSubmit={(values) => this.handleVideoSubmit(values)}>\n                                         <div className=\"row\">\n                                            <Label htmlFor=\"link\"><h3>Add Videos:</h3></Label>\n                                            <Input type=\"text\" id=\"link\" name=\"link\" innerRef={(input) => this.link = input} />\n                                            <div className=\"col\">\n                                                <Button type=\"submit\" value=\"submit\">Submit</Button>\n                                            </div>\n                                        </div>\n                                    </LocalForm>\n                                </Collapse>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            {videos}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Detail;","import React, {Component} from 'react';\nimport {Nav, NavItem, Navbar, NavbarBrand, NavbarToggler, Collapse, Button, Modal, ModalHeader,ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    toggleNav () {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal () {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        this.props.loginUser({username: this.username.value, password: this.password.value})\n        event.preventDefault();\n    }\n\n    handleLogout() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar dark color=\"dark\" expand=\"sm\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"https://image.flaticon.com/icons/png/128/64/64210.png\" alt=\"logo\"/></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-data\" to=\"/models\">Models</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-data\" to=\"/celebs\">Celebs</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                <NavLink className=\"nav-data\" to=\"/pornstars\">Stars</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                { !this.props.auth.isAuthenticated ?\n                                        <Button outline onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                        {console.log(this.props.auth)}\n                                        <div className=\"navbar-text mr-3\"><h3>{this.props.auth.user.displayName}</h3></div>\n                                        <Button outline onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                  innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                  innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"Submit\" color=\"info\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n/*<NavItem>\n                                    <NavLink className=\"nav-data\" to=\"/pornstars\">Pornstars</NavLink>\n                                </NavItem>*/\nexport default Header;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Footer extends Component{\n    render() {\n        return(\n            <div className=\"footer\">\n                <div className=\"container\">\n                    <h4>Quick Links</h4>\n                    <div className=\"col-12 col-sm-4\">\n                        <Link to=\"https://github.com/\">GitHub</Link><br></br>\n                        <Link to=\"https://web.whatsapp.com/\">WhatsApp</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport {Button, FormGroup, Label,Input} from 'reactstrap';\nimport {LocalForm} from 'react-redux-form';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.toggleLoginModal = this.toggleLoginModal.bind(this);\n    }\n\n    handleLogin(event) {\n        this.toggleLoginModal();\n        this.props.loginUser({username: this.username.value, password: this.password.value});\n    }\n\n\n    toggleLoginModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row align-center\">\n                    <h2>Login</h2>\n                </div>\n                <div className=\"form\">\n                    <LocalForm onSubmit={(values) => {this.handleLogin(values)}}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\"><h3>Username:</h3></Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                  innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\"><h3>Password:</h3></Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                  innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\" value=\"submit\">Submit</Button>\n                        </LocalForm>\n                </div>\n            </div>\n        );\n    }\n}\n\n/*<Modal isOpen={this.state.isModalOpen} toggle={this.toggleLoginModal}>\n                    <ModalHeader toggle={this.toggleLoginModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => {this.handleLogin(values)}}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username:</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                  innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password:</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                  innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>*/\nexport default Home;","import React, {Component} from 'react';\nimport {Card, CardImg, CardImgOverlay, CardFooter, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, FormGroup, Label} from 'reactstrap';\nimport { Control, LocalForm } from 'react-redux-form';\nimport {Link} from 'react-router-dom';\n\nimport {Loading} from './Loading';\n\nfunction RenderCelebs({celeb, deleteCeleb, onClick}) {\n    return(\n        <Card style={{backgroundColor:\"#000\"}}>\n            <Link to={`/celebs/${celeb.name}`}>\n                <CardImgOverlay><Button className=\"delete\" outline onClick={()=>deleteCeleb(celeb._id)}><span className=\"fa fa-trash\" /></Button></CardImgOverlay>\n                <CardImg src={celeb.image} alt={celeb.name} />\n                <CardFooter>{celeb.name.toUpperCase()}</CardFooter>\n            </Link>\n        </Card>\n    );\n}\n\nclass Celebs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            celebs: this.props.celebs,\n            celedModalOpen: false\n        }\n\n        this.toggleCelebModal = this.toggleCelebModal.bind(this);\n        this.handleCelebSubmit = this.handleCelebSubmit.bind(this);\n    }\n\n    toggleCelebModal() {\n        this.setState({\n            celedModalOpen: !this.state.celedModalOpen\n        })\n    }\n\n    handleCelebSubmit(values) {\n        this.toggleCelebModal();\n        console.log(JSON.stringify(values));\n        this.props.postCeleb(values.name,values.image);\n    }\n\n    render() {\n        const menu = this.state.celebs.map((celeb) => {\n            return(\n                <div className=\"col-12 col-sm-3 m-1\">\n                    <RenderCelebs celeb={celeb} deleteCeleb={this.props.deleteCeleb} />\n                </div>\n            );\n        })\n        \n        if(this.props.celebs.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if(this.props.celebs.errMsg) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{this.props.celebs.errMsg}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem active>Celebs</BreadcrumbItem>\n                        </Breadcrumb>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-sm-4\">\n                            <h3>Celebs</h3>\n                        </div>\n                        <div className=\"col-12 col-sm offset-sm-4\">\n                            <Button onClick={this.toggleCelebModal}><span className=\"fa fa-plus\" /></Button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                    <Modal isOpen={this.state.celedModalOpen} toggle={this.state.toggleCelebModal}>\n                        <ModalHeader toggle={this.state.toggleCelebModal}>Add Celeb</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleCelebSubmit(values)}>\n                                <FormGroup>\n                                    <Label htmlFor=\"name\">Name</Label>\n                                    <Control.Text model=\".name\" id=\"celebName\" name=\"celebName\" placeholder=\"Name\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"image\">Image</Label>\n                                    <Control.Text model=\".image\" id=\"celebImg\" name=\"celebImg\" placeholder=\"Image\" />\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"info\">Submit</Button>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Celebs;","import React, {Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardFooter, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, FormGroup, Label } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm} from 'react-redux-form';\n\nimport {Loading} from './Loading';\n\nfunction RenderStars({star, onClick, deleteStar}) {\n    return(\n        <Card style={{backgroundColor:\"#000\"}}>\n            <Link to={`/pornstars/${star.name}`} >\n                <CardImgOverlay><Button className=\"delete\" outline onClick={()=>deleteStar(star._id)}><span className=\"fa fa-trash\" /></Button></CardImgOverlay>\n                <CardImg src={star.image} alt={star.name} />\n                <CardFooter>{star.name.toUpperCase()}</CardFooter>\n            </Link> \n        </Card>\n    );\n}\n\nclass Stars extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stars: this.props.stars,\n            starModalOpen: false\n        }\n        this.toggleStarModal = this.toggleStarModal.bind(this);\n        this.handleStarSubmit = this.handleStarSubmit.bind(this);\n    }\n\n    toggleStarModal() {\n        this.setState ({\n            starModalOpen: !this.state.starModalOpen\n        });\n    }\n\n    handleStarSubmit(values) {\n        this.toggleStarModal();\n        console.log(JSON.stringify(values));\n        this.props.postStar(values.name,values.image);\n    }\n\n    render() {\n        const menu = this.state.stars.map((star) => {\n            return(\n                <div className=\"col-12 col-sm-3 m-1\">\n                    <RenderStars star={star} deleteStar={this.props.deleteStar} />\n                </div>\n            );\n        });\n        if(this.props.stars.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            )\n        }\n        else if(this.props.stars.errMsg) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h3>{this.props.models.errMsg}</h3>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem active>Stars</BreadcrumbItem>\n                        </Breadcrumb>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-sm-4\">\n                            <h3>Stars</h3>\n                        </div>\n                        <div className=\"col-12 col-sm  offset-sm-4\">\n                            <Button onClick={this.toggleStarModal}><span className=\"fa fa-plus\" /></Button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                    <Modal isOpen={this.state.starModalOpen} toggle={this.starModalOpen}>\n                        <ModalHeader toggle={this.toggleStarModal}>Add Model</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleStarSubmit(values)}>\n                                <FormGroup>\n                                    <Label htmlFor=\"name\">Name</Label>\n                                    <Control.Text model=\".name\" id=\"starName\" name=\"starName\" placeholder=\"Name\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"image\">Image</Label>\n                                    <Control.Text model=\".image\" id=\"starImg\" name=\"starImg\" placeholder=\"Image\" />\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"info\">Submit</Button>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Stars;","export const ADD_IMAGE = 'ADD_IMAGE';\nexport const ADD_VIDEO = 'ADD_VIDEO';\n\nexport const MODELS_LOADING = 'MODELS_LOADING';\nexport const MODELS_FAILED = 'MODELS_FAILED';\nexport const ADD_MODELS = 'ADD_MODELS';\nexport const ADD_MODEL = 'ADD_MODEL';\nexport const DELETE_MODEL = 'DELETE_MODEL';\n\nexport const CELEBS_LOADING = 'CELEBS_LOADING';\nexport const CELEBS_FAILED = 'CELEBS_FAILED';\nexport const ADD_CELEBS = 'ADD_CELEBS';\nexport const ADD_CELEB = 'ADD_CELEB';\nexport const DELETE_CELEB = 'DELETE_CELEB';\n\nexport const STARS_LOADING = 'STARS_LOADING';\nexport const STARS_FAILED = 'STARS_FAILED';\nexport const ADD_STARS = 'ADD_STARS';\nexport const ADD_STAR = 'ADD_STAR';\nexport const DELETE_STAR = 'DELETE_STAR';\n\nexport const ADD_IMAGES = 'ADD_IMAGES';\nexport const IMAGES_FAILED = 'IMAGES_FAILED';\nexport const DELETE_IMAGE = 'DELETE_IMAGE';\n\nexport const ADD_VIDEOS = 'ADD_VIDEOS';\nexport const VIDEOS_FAILED = 'VIDEOS_FAILED';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';","import {config} from './config';\nimport firebase from 'firebase';\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\n\nexport const fireauth = firebase.auth;\n\nexport const firestore = firebase.firestore();\n\nexport const firebasestore = firebase.firestore;","export const config = {\n    apiKey: \"AIzaSyDqjwDojl8SaClM9UP3lSvN2Tan9UFHp90\",\n    authDomain: \"datastore-9e5a2.firebaseapp.com\",\n    databaseURL: \"https://datastore-9e5a2-default-rtdb.firebaseio.com\",\n    projectId: \"datastore-9e5a2\",\n    storageBucket: \"datastore-9e5a2.appspot.com\",\n    messagingSenderId: \"1005554351784\",\n    appId: \"1:1005554351784:web:5afc4c2ebea7cb680e0c9d\",\n    measurementId: \"G-DYH1TYVKK3\"\n};","import * as ActionTypes from './ActionTypes';\nimport {auth, firestore} from '../firebase/firebase';\n\nexport const addImage = (image) => ({\n    type: ActionTypes.ADD_IMAGE,\n    payload: image\n});\n\nexport const postImage = (name, category, image) => (dispatch) => {\n    if(!auth.currentUser) {\n        console.log('User unavailable!');\n        return;\n    }\n\n    return firestore.collection('images').add({\n        name: name,\n        category: category,\n        image: image\n    })\n    .then(docRef => {\n        firestore.collection('images').doc(docRef.id).get()\n        .then(doc => {\n            if(doc.exists) {\n                const data = doc.data();\n                const _id = doc.id;\n                let image = {_id,...data};\n                dispatch(addImage(image));\n            } else {\n                console.log('No such document');\n            }\n        });\n    })\n    .catch(error => {console.log(error.message)});\n};\n\nexport const deleteImage = (id) => (dispatch) => {\n    return firestore.collection('images').doc(id).delete()\n    .then(() => {\n        console.log(\"Deleted image:\"+id);\n    })\n    .catch((error) => {\n        console.log(error.message);\n    });\n}\n\nexport const addVideo = (video) => ({\n    type: ActionTypes.ADD_VIDEO,\n    payload: video\n});\n\nexport const postVideo = (name, category, link) => (dispatch) => {\n    if(!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n    return firestore.collection('videos').add({\n        name: name,\n        category: category,\n        link: link\n    })\n    .then((docRef) => {\n        firestore.collection('videos').doc(docRef.id).get()\n        .then(doc => {\n            if(doc.exists) {\n                const _id = doc.id;\n                const data = doc.data();\n                let video = {_id,...data};\n                dispatch(addVideo(video));\n            } else {\n                console.log('No such document!');\n            }\n        });\n    })\n    .catch((error) => console.log(error.message));\n};\n\nexport const deleteVideo = (id) => (dispatch) => {\n    return firestore.collection('videos').doc(id).delete()\n    .then(() => {\n        console.log('Deleted video:'+id);\n    })\n    .catch((error) => {\n        console.log(error.message);\n    });\n}\n\nexport const fetchModels = () => (dispatch) => {\n    dispatch(modelsLoading(true));\n\n    return firestore.collection('models').get()\n    .then(snapshot => {\n        let models = [];\n        snapshot.forEach(doc => {\n            const data = doc.data()\n            const _id = doc.id\n            models.push({_id,...data});\n        });\n        return models;\n    })\n    .then(models => dispatch(addModels(models)))\n    .catch(error => dispatch(modelsFailed(error.message)));\n}\n\nexport const modelsLoading = () => ({\n    type: ActionTypes.MODELS_LOADING\n});\n\nexport const modelsFailed = (errMsg) => ({\n    type: ActionTypes.MODELS_FAILED,\n    payload: errMsg\n});\n\nexport const addModels = (models) => ({\n    type: ActionTypes.ADD_MODELS,\n    payload: models\n});\n\nexport const addModel = (model) => ({\n    type: ActionTypes.ADD_MODEL,\n    payload: model\n});\n\nexport const postModel = (name, image) => (dispatch) => {\n    if(!auth.currentUser){\n        console.log('User unavailable!');\n        return;\n    }\n\n    return firestore.collection('models').add({\n        name: name,\n        image: image\n    })\n    .then(docRef => {\n        firestore.collection('models').doc(docRef.id).get()\n        .then(doc => {\n            if(doc.exists) {\n                const data = doc.data();\n                const _id = doc.id;\n                let model = {_id, ...data};\n                dispatch(addModel(model));\n            } else {\n                console.log(\"No such document!\");\n            }\n        });\n    })\n    .catch(error => {console.log(error.message)});\n}\n\nexport const deleteModel = (id) => (dispatch) => {\n    return firestore.collection('models').doc(id).delete()\n    .then(() => {\n        console.log(\"Deleted model:\"+id);\n    })\n    .catch((error) => {\n        console.log(error.message);\n    });\n}\n\nexport const fetchCelebs = () => (dispatch) => {\n    dispatch(celebsLoading(true));\n\n    return firestore.collection('celebs').get()\n    .then(snapshot => {\n        let celebs = [];\n        snapshot.forEach(doc => {\n            const data = doc.data();\n            const _id = doc.id;\n            celebs.push({_id,...data});\n        });\n        return celebs;\n    })\n    .then(celebs => dispatch(addCelebs(celebs)))\n    .catch(error => dispatch(celebsFailed(error.message)));\n}\n\nexport const celebsLoading = () => ({\n    type: ActionTypes.CELEBS_LOADING\n});\n\nexport const celebsFailed = () => ({\n    type: ActionTypes.CELEBS_FAILED\n});\n\nexport const addCelebs = (celebs) => ({\n    type: ActionTypes.ADD_CELEBS,\n    payload: celebs\n});\n\nexport const addCeleb = (celeb) => ({\n    type: ActionTypes.ADD_CELEB,\n    payload: celeb\n});\n\nexport const postCeleb = (name, image) => (dispatch) => {\n    if(!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n\n    return firestore.collection('celebs').add({\n        name: name,\n        image: image\n    })\n    .then(docRef => {\n        firestore.collection('celebs').doc(docRef.id).get()\n        .then(doc => {\n            if(doc.exists) {\n                const data = doc.data();\n                const _id = doc.id;\n                let celeb = {_id,...data};\n                dispatch(addCeleb(celeb));\n            } else {\n                console.log(\"No such document!\");\n            }\n        });\n    })\n    .catch(error => console.log(error.message));\n}\n\nexport const deleteCeleb = (id) => (dispatch) => {\n    return firestore.collection('celebs').doc(id).delete()\n    .then(() => {\n        console.log('Deleted celeb:'+id);\n    })\n    .catch((error) => {\n        console.log(error.message);\n    });\n}\n\nexport const fetchImages = () => (dispatch) => {\n    return firestore.collection('images').get()\n    .then(snapshot => {\n        let images = [];\n        snapshot.forEach(doc => {\n            const data = doc.data();\n            const _id = doc.id;\n            images.push({_id, ...data});\n        });\n        return images;\n    })\n    .then(images => dispatch(addImages(images)))\n    .catch(error => console.log(error.message));\n}\n\nexport const addImages = (images) => ({\n    type: ActionTypes.ADD_IMAGES,\n    payload: images\n});\n\nexport const imagesFailed = (errMsg) => ({\n    type: ActionTypes.IMAGES_FAILED,\n    payload: errMsg\n});\n\nexport const fetchVideos = () => (dispatch) => {\n    return firestore.collection('videos').get()\n    .then(snapshot => {\n        let videos = [];\n        snapshot.forEach(doc => {\n            const data = doc.data();\n            const _id = doc.id;\n            videos.push({_id,...data});\n        });\n        return videos;\n    })\n    .then(videos => dispatch(addVideos(videos)))\n    .catch(error => {console.log(error.message)});\n}\n\nexport const addVideos = (videos) => ({\n    type: ActionTypes.ADD_VIDEOS,\n    payload: videos\n});\n\nexport const videosFailed = (errMsg) => ({\n    type: ActionTypes.VIDEOS_FAILED,\n    payload: errMsg\n});\n\nexport const fetchStars = () => (dispatch) => {\n    dispatch(starsLoading(true));\n\n    return firestore.collection('pornstars').get()\n    .then(snapshot => {\n        let stars = [];\n        snapshot.forEach(doc => {\n            const data = doc.data();\n            const _id = doc.id;\n            stars.push({_id,...data});\n        });\n        return stars;\n    })\n    .then(stars => dispatch(addStars(stars)))\n    .catch(error => dispatch(starsFailed(error.message)));\n}\n\nexport const starsLoading = () => ({\n    type: ActionTypes.STARS_LOADING\n});\n\nexport const starsFailed = (errMsg) => ({\n    type: ActionTypes.STARS_FAILED,\n    payload: errMsg\n});\n\nexport const addStars = (stars) => ({\n    type: ActionTypes.ADD_STARS,\n    payload: stars\n});\n\nexport const addStar = (star) => ({\n    type: ActionTypes.ADD_STAR,\n    payload: star\n});\n\nexport const postStar = (name, image) => (dispatch) => {\n    if(!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n\n    return firestore.collection('pornstars').add({\n        name: name,\n        image: image\n    })\n    .then(docRef => {\n        firestore.collection('pornstars').doc(docRef.id).get()\n        .then(doc => {\n            if(doc.exists) {\n                const data = doc.data();\n                const _id = doc.id;\n                let star = {_id,...data};\n                dispatch(addStar(star));\n            } else {\n                console.log('No such document!');\n            }\n        });\n    })\n    .catch(error => console.log(error));\n}\n\nexport const deleteStar = (id) => (dispatch) => {\n    return firestore.collection('pornstars').doc(id).delete()\n    .then(() => {\n        console.log('Deleted star:'+id);\n    })\n    .catch((error) => {\n        console.log(error.message);\n    })\n}\n\nexport const requestLogin = () => ({\n    type: ActionTypes.LOGIN_REQUEST\n});\n\nexport const recieveLogin = (user) => ({\n    type: ActionTypes.LOGIN_SUCCESS,\n    user\n});\n\nexport const loginError = (message) => ({\n    type: ActionTypes.LOGIN_FAILURE,\n    message\n});\n\nexport const loginUser = (creds) => (dispatch) => {\n    dispatch(requestLogin(creds));\n\n    return auth.signInWithEmailAndPassword(creds.username, creds.password)\n    .then(() => {\n        var user = auth.currentUser;\n        localStorage.setItem('user',JSON.stringify(user));\n        dispatch(fetchModels());\n        dispatch(fetchCelebs());\n        dispatch(fetchImages());\n        dispatch(fetchVideos());\n        dispatch(fetchStars());\n        dispatch(recieveLogin(user));\n    })\n    .catch(error => dispatch(loginError(error.message)))\n};\n\nexport const requestLogout = () => ({\n    type: ActionTypes.LOGOUT_REQUEST\n});\n\nexport const recieveLogout = () => ({\n    type: ActionTypes.LOGOUT_SUCCESS\n});\n\nexport const logoutUser = () => (dispatch) => {\n    dispatch(requestLogout());\n    auth.signOut().then(() => {\n\n    }).catch((error) => {\n        \n    });\n    localStorage.removeItem('user');\n    dispatch(recieveLogout())\n}","import React, {Component} from 'react';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport Menu from './Menu';\nimport Detail from './Detail';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Home from './Home';\nimport Celebs from './Celebs';\nimport Stars from './Stars';\nimport {connect} from 'react-redux';\nimport { addImage, addVideo, fetchModels, fetchCelebs, fetchImages, fetchVideos, fetchStars, postImage, postVideo, postModel, postCeleb, postStar, deleteImage, deleteModel, deleteCeleb, deleteVideo, deleteStar, loginUser, logoutUser } from '../redux/ActionCreator';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return{\n        models: state.models,\n        celebs: state.celebs,\n        images: state.images,\n        videos: state.videos,\n        stars: state.stars,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addImage: (name, category, image) => dispatch(addImage(name, category, image)),\n    addVideo: (name, category, video) => dispatch(addVideo(name, category, video)),\n    fetchModels: () => {dispatch(fetchModels())},\n    fetchCelebs: () => {dispatch(fetchCelebs())},\n    fetchImages: () => {dispatch(fetchImages())},\n    fetchVideos: () => {dispatch(fetchVideos())},\n    fetchStars: () => {dispatch(fetchStars())},\n    postImage: (name, category, image) => dispatch(postImage(name, category, image)),\n    postVideo: (name, category, video) => dispatch(postVideo(name, category, video)),\n    postModel: (name, image) => dispatch(postModel(name,image)),\n    postCeleb: (name, image) => dispatch(postCeleb(name,image)),\n    postStar: (name, image) => dispatch(postStar(name, image)),\n    deleteImage: (id) => dispatch(deleteImage(id)),\n    deleteModel: (id) => dispatch(deleteModel(id)),\n    deleteVideo: (id) => dispatch(deleteVideo(id)),\n    deleteCeleb: (id) => dispatch(deleteCeleb(id)),\n    deleteStar: (id) => dispatch(deleteStar(id)),\n    loginUser: (creds) => dispatch(loginUser(creds)),\n    logoutUser: () => dispatch(logoutUser())\n});\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchModels();\n        this.props.fetchCelebs();\n        this.props.fetchImages();\n        this.props.fetchVideos();\n        this.props.fetchStars();\n    }\n\n    onSelect(name) {\n        this.setState({\n            selected: name,\n        });\n    }\n\n    render() {\n        const Modeldetail = ({match}) => {\n            return(\n                <Detail image={this.props.images.images.filter((image) => image.name === match.params.model)}\n                        video={this.props.videos.videos.filter((video) => video.name === match.params.model)}\n                        addImage = {this.props.addImage} addVideo={this.props.addVideo}\n                        isLoading = {this.props.models.isLoading}\n                        errMsg = {this.props.models.errMsg}\n                        postImage = {this.props.postImage}\n                        deleteImage = {this.props.deleteImage}\n                        postVideo = {this.props.postVideo}\n                        deleteVideo = {this.props.deleteVideo}\n                        path=\"models\" name={match.params.model} />      \n            );\n        }\n        const CelebDetail = ({match}) => {\n            return(\n                <Detail image={this.props.images.images.filter((image) => image.name === match.params.celeb)} \n                        video={this.props.videos.videos.filter((video) => video.name === match.params.celeb)}\n                        addImage = {this.props.addImage} addVideo={this.props.addVideo}\n                        isLoading = {this.props.models.isLoading}\n                        errMsg = {this.props.models.errMsg}\n                        postImage = {this.props.postImage}\n                        deleteImage = {this.props.deleteImage}\n                        postVideo = {this.props.postVideo}\n                        path=\"celebs\" name={match.params.celeb} />\n            );\n        }\n        const StarDetail = ({match}) => {\n            return(\n                <Detail image={this.props.images.images.filter((image) => image.name === match.params.star)} \n                        video={this.props.videos.videos.filter((video) => video.name === match.params.star)}\n                        addImage = {this.props.addImage} addVideo={this.props.addVideo}\n                        isLoading = {this.props.stars.isLoading}\n                        errMsg = {this.props.stars.errMsg}\n                        postImage = {this.props.postImage}\n                        deleteImage = {this.props.deleteImage}\n                        postVideo = {this.props.postVideo}\n                        deleteVideo = {this.props.deleteVideo}\n                        path=\"pornstars\" name={match.params.star} />\n            );\n        }\n        return(\n            (this.props.auth.isAuthenticated)?\n            <div>\n                <Header auth={this.props.auth} logoutUser={this.props.logoutUser} />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={250}>\n                        <Switch location={this.props.location}>\n                            <Route exact path=\"/models\" component={()=> <Menu models={this.props.models.models} postModel={this.props.postModel} deleteModel={this.props.deleteModel} /> } />\n                            <Route path=\"/models/:model\" component={Modeldetail} />\n                            <Route exact path=\"/celebs\" component={()=><Celebs celebs={this.props.celebs.celebs} postCeleb={this.props.postCeleb} deleteCeleb={this.props.deleteCeleb} /> } />\n                            <Route path=\"/celebs/:celeb\" component={CelebDetail} />\n                            <Route exact path=\"/pornstars\" component={()=><Stars stars={this.props.stars.stars} postStar={this.props.postStar} deleteStar={this.props.deleteStar} />} />\n                            <Route path=\"/pornstars/:star\" component={StarDetail} />\n                            <Redirect to=\"/models\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n            :<Home loginUser={this.props.loginUser} />\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Models = (state = {\n    isLoading: true,\n    errMsg: null,\n    models:[]\n}, action) =>{\n    switch(action.type) {\n        case ActionTypes.ADD_MODELS:\n            return {...state, isLoading:false, errMsg:null, models:action.payload};\n\n        case ActionTypes.MODELS_LOADING:\n            return {...state, isLoading:true, errMsg:null, models:[]};\n\n        case ActionTypes.MODELS_FAILED:\n            return {...state, isLoading:false, errMsg:action.payload};\n\n        case ActionTypes.ADD_MODEL:\n            var model = action.payload;\n            console.log(\"Model: \"+model);\n            return {...state, models:state.models.concat(model)};\n            \n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Images = (state = {\n    errMsg: null,\n    images: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_IMAGES:\n            return {...state, errMsg:null, images:action.payload};\n        \n        case ActionTypes.IMAGES_FAILED:\n            return {...state, errMsg:action.payload};\n        \n        case ActionTypes.ADD_IMAGE:\n            var image = action.payload;\n            console.log(\"Image: \",image);\n            return {...state, images:state.images.concat(image)};\n            \n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Videos = (state = {\n    errMsg: null,\n    videos: [],\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_VIDEOS:\n            return {...state, errMsg:null, videos:action.payload};\n\n        case ActionTypes.VIDEOS_FAILED:\n            return {...state, errMsg:action.payload};\n\n        case ActionTypes.ADD_VIDEO:\n            var video = action.payload;\n            console.log(\"Video: \"+video);\n            return {...state, videos:state.videos.concat(video)}\n            \n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Celebs = (state = {\n    isLoading: true,\n    errMsg: null,\n    celebs:[]\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.CELEBS_LOADING:\n            return {...state, isLoading:true, errMsg:null, celebs:[]};\n        \n        case ActionTypes.CELEBS_FAILED:\n            return {...state, isLoading:false, errMsg:action.payload};\n\n        case ActionTypes.ADD_CELEBS:\n            return {...state, isLoading:false, errMsg:null, celebs:action.payload};\n\n        case ActionTypes.ADD_CELEB:\n            var celeb = action.payload;\n            console.log('Celeb: '+celeb);\n            return {...state, celebs:state.celebs.concat(celeb)};\n            \n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Stars = (state = {\n    isLoading: true,\n    errMsg: null,\n    stars: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_STARS:\n            return {...state, isLoading:false, errMsg:null, stars:action.payload};\n\n        case ActionTypes.STARS_LOADING:\n            return {...state, isLoading:true, errMsg:null, stars:[]};\n        \n        case ActionTypes.STARS_FAILED:\n            return {...state, isLoading:false, errMsg:action.payload};\n        \n        case ActionTypes.ADD_STAR:\n            var star = action.payload;\n            console.log(\"Star:\"+star);\n            return {...state, stars:state.stars.concat(star)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Auth = (state = {\n    isLoading: false,\n    isAuthenticated: false,\n    user: null,\n    errMsg: null\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state, isLoading:true, isAuthenticated:false};\n\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state, isLoading:false, isAuthenticated: true, errMsg:'', user:action.user};\n        \n        case ActionTypes.LOGOUT_FAILURE:\n            return {...state, isAuthenticated:false, errMsg:action.message};\n        \n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state, isLoading:true, isAuthenticated: true};\n\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state, isLoading:false, isAuthenticated:false, token:'', user:null};\n\n        default:\n            return state\n    }\n}","import React, {Component} from 'react';\nimport Main from './component/Main';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return(\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n              <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {Models} from './models';\nimport {Images} from './images';\nimport {Videos} from './videos';\nimport {Celebs} from './celebs';\nimport {Stars} from './stars';\nimport {Auth} from './auth';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            models: Models,\n            images: Images,\n            videos: Videos,\n            celebs: Celebs,\n            stars: Stars,\n            auth: Auth\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}